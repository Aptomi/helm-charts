apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy-{{ .Release.Name }}
  name: oauth2-proxy-{{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy-{{ .Release.Name }}
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy-{{ .Release.Name }}
    spec:
      containers:
      - args: 
          - "--provider={{ .Values.oauth.provider }}"
          - "--azure-tenant={{ .Values.oauth.tenant }}"
          - "--email-domain={{ .Values.oauth.domain }}"
          - "--upstream=file:///dev/null"
          - "--http-address=0.0.0.0:4180"
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: "{{ .Values.oauth.clientId }}"
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: "{{ .Values.oauth.clientSecret }}"
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: "{{ .Values.oauth.cookieSecret }}"
        - name: OAUTH2_PROVIDER
          value: "{{ .Values.oauth.provider }}"
        - name: OAUTH2_AZURE_TENANT
          value: "{{ .Values.oauth.tenant }}"
        - name: OAUTH2_DOMAIN
          value: "{{ .Values.oauth.domain }}"

        image: docker.io/colemickens/oauth2_proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy-{{ .Release.Name }}
        ports:
        - containerPort: 4180
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy-{{ .Release.Name }}
  name: oauth2-proxy-{{ .Release.Name }}
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy-{{ .Release.Name }}
