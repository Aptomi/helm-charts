apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "static-content-with-oauth.fullname" . }}
  labels:
    app: {{ template "static-content-with-oauth.name" . }}
    chart: {{ template "static-content-with-oauth.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "static-content-with-oauth.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "static-content-with-oauth.name" . }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.docImage.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.docImage.imagePullSecrets }}
{{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: docs
              mountPath: /usr/share/nginx/html
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      initContainers:
        - name: docs
          image: {{ .Values.docImage.repository }}:{{ .Values.docImage.tag }}
          imagePullPolicy: {{ .Values.docImage.pullPolicy }}

          command: 
            - sh
            - -cex 
            - find {{ .Values.docImage.contentDir }} -type f ; cp -vr {{ .Values.docImage.contentDir }}/* /var/www
          volumeMounts:
            - name: docs
              mountPath: /var/www
      volumes:          
        - name: docs
          emptyDir: {} 
